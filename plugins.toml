[[plugins]]
repo = 'bluz71/vim-nightfly-colors'
hook_add = '''
colorscheme nightfly
'''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_enabled = 1
'''

[[plugins]]
repo = 'Shougo/ddc.vim'
hook_add = '''
call ddc#custom#patch_global({
	\	"ui": "native",
	\	"sources": ["vim-lsp", "around"],
	\	"sourceOptions": {
	\		"_": {
	\			"ignoreCase": v:true,
	\			"matchers": ["matcher_fuzzy"],
	\			"sorters": ["sorter_fuzzy"],
	\			"converters": ["converter_fuzzy"],
	\		},
	\		"around": {
	\			"mark": "[A]"
	\		},
	\		"vim-lsp": {
	\			"mark": "[LSP]",
	\			"forceCompletionPattern": "\.\w*|:\w*|->\w*",
	\		}
	\	},
	\	"filterParams": {
	\		"converter_fuzzy": {
	\			"hlGroup": "SpellBad",
	\		}
	\	}})
call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-ui-native'

[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'Shougo/ddc-source-around'

[[plugins]]
repo = 'shun/ddc-source-vim-lsp'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> gs <plug>(lsp-document-symbol-search)
    nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
    nmap <buffer> gr <plug>(lsp-references)
    nmap <buffer> gi <plug>(lsp-implementation)
    nmap <buffer> gt <plug>(lsp-type-definition)
    nmap <buffer> <leader>rn <plug>(lsp-rename)
    nmap <buffer> [g <plug>(lsp-previous-diagnostic)
    nmap <buffer> ]g <plug>(lsp-next-diagnostic)
    nmap <buffer> K <plug>(lsp-hover)
    nnoremap <buffer> <expr><c-f> lsp#scroll(+4)
    nnoremap <buffer> <expr><c-b> lsp#scroll(-4)

    let g:lsp_format_sync_timeout = 1000
    autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')
    
    " refer to doc to add more commands
endfunction

augroup lsp_install
    au!
    " call s:on_lsp_buffer_enabled only for languages that has the server registered.
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = '''
call ddu#custom#patch_local("filer", {
  \   "ui": "filer",
  \   "sources": [{"name": "file", "params": {}}],
  \   "sourceOptions": {
  \     "_": {
  \       "columns": ["filename"],
  \     },
  \   },
  \   "kindOptions": {
  \     "file": {
  \       "defaultAction": "open",
  \     },
  \   }
  \ })

autocmd FileType ddu-filer call s:ddu_my_settings()
function! s:ddu_my_settings() abort
  nnoremap <buffer><silent> <CR>
  	\ <Cmd>call ddu#ui#do_action('itemAction')<CR>
  nnoremap <buffer><silent> <Space>
  	\ <Cmd>call ddu#ui#do_action('toggleSelectItem')<CR>
  nnoremap <buffer> o
  	\ <Cmd>call ddu#ui#do_action('expandItem',
  	\ {'mode': 'toggle'})<CR>
  nnoremap <buffer><silent> q
  	\ <Cmd>call ddu#ui#do_action('quit')<CR>
endfunction

nnoremap fe <CMD>call ddu#start({ "name": "filer" })<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-ui-filer'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-source-file'

[[plugins]]
repo = 'Shougo/ddu-column-filename'

